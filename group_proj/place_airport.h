/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _PLACE_AIRPORT_H_RPCGEN
#define _PLACE_AIRPORT_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define PNAMELEN 63
#define ANAMELEN 40
#define STATELEN 3
#define CODELEN 4
#define NUMPLACES 25375
#define NUMAIRPORTS 1065

typedef char placetype[PNAMELEN];

typedef char airporttype[ANAMELEN];

typedef char statetype[STATELEN];

typedef char codetype[CODELEN];

typedef struct Airport *airportlist;

struct Airport {
	codetype code;
	airporttype name;
	statetype state;
	float latitude;
	float longitude;
	float distance;
	airportlist next;
};
typedef struct Airport Airport;


struct readplaces_ret {
	int err;
	union {
		airportlist list;
	} readplaces_ret_u;
};
typedef struct readplaces_ret readplaces_ret;

struct Place {
	placetype name;
	statetype state;
	float latitude;
	float longitude;
	char* host;
};
typedef struct Place Place;


#define PLACEPROG 0x37777779
#define PLACES_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define READPLACE 1
extern  readplaces_ret * readplace_1(Place *, CLIENT *);
extern  readplaces_ret * readplace_1_svc(Place *, struct svc_req *);
extern int placeprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define READPLACE 1
extern  readplaces_ret * readplace_1();
extern  readplaces_ret * readplace_1_svc();
extern int placeprog_1_freeresult ();
#endif /* K&R C */

#define AIRPORTPROG 0x3777777A
#define AIRPORTS_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define READAIRPORT 2
extern  readplaces_ret * readairport_1(Place *, CLIENT *);
extern  readplaces_ret * readairport_1_svc(Place *, struct svc_req *);
extern int airportprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define READAIRPORT 2
extern  readplaces_ret * readairport_1();
extern  readplaces_ret * readairport_1_svc();
extern int airportprog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_placetype (XDR *, placetype);
extern  bool_t xdr_airporttype (XDR *, airporttype);
extern  bool_t xdr_statetype (XDR *, statetype);
extern  bool_t xdr_codetype (XDR *, codetype);
extern  bool_t xdr_airportlist (XDR *, airportlist*);
extern  bool_t xdr_Airport (XDR *, Airport*);
extern  bool_t xdr_Airport (XDR *, Airport*);
extern  bool_t xdr_readplaces_ret (XDR *, readplaces_ret*);
extern  bool_t xdr_Place (XDR *, Place*);
extern  bool_t xdr_Place (XDR *, Place*);

#else /* K&R C */
extern bool_t xdr_placetype ();
extern bool_t xdr_airporttype ();
extern bool_t xdr_statetype ();
extern bool_t xdr_codetype ();
extern bool_t xdr_airportlist ();
extern bool_t xdr_Airport ();
extern bool_t xdr_Airport ();
extern bool_t xdr_readplaces_ret ();
extern bool_t xdr_Place ();
extern bool_t xdr_Place ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_PLACE_AIRPORT_H_RPCGEN */
